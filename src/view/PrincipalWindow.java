/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import business.PokemonBusiness;
import domain.Pokemon;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import tda.ListaCircularEnlazadaDoble;
import tda.ListaException;
import tda.Nodo;
import util.IConstants;

/**
 *
 * @author Nelson
 */
public class PrincipalWindow extends javax.swing.JFrame implements IConstants{

    private int currentPosition;
    private ListaCircularEnlazadaDoble pokemonList;
    private Pokemon currentPokemon;    
    /**
     * Creates new form PrincipalWindow
     */
    public PrincipalWindow() {
        initComponents();
        init();
    }
    
    private void init (){
        setLocationRelativeTo(null);
        setResizable(false);
        buttonNextPokemon.setContentAreaFilled(false);
        buttonNextPokemon.setBorderPainted(false);
        buttonPreviousPokemon.setContentAreaFilled(false);
        buttonPreviousPokemon.setBorderPainted(false);
        buttonSearchPokemon.setContentAreaFilled(false);
        buttonSearchPokemon.setBorderPainted(false);
        
        buttonSortNameAsc.setContentAreaFilled(false);
        buttonSortNameAsc.setBorderPainted(false);
        buttonSortNameDesc.setContentAreaFilled(false);
        buttonSortNameDesc.setBorderPainted(false);
        buttonSortWeightAsc.setContentAreaFilled(false);
        buttonSortWeightAsc.setBorderPainted(false);
        buttonSortHeightAsc.setContentAreaFilled(false);
        buttonSortHeightAsc.setBorderPainted(false);
        buttonSortHeightDesc.setContentAreaFilled(false);
        buttonSortHeightDesc.setBorderPainted(false);
        buttonSortNumberAsc.setContentAreaFilled(false);
        buttonSortNumberAsc.setBorderPainted(false);
        
        buttonDelete.setContentAreaFilled(false);
        buttonDelete.setBorderPainted(false);
        buttonDowload.setContentAreaFilled(false);
        buttonDowload.setBorderPainted(false);
        
        loadPokemonFromFile();
        
        currentPosition = 1;
        try {
            currentPokemon = (Pokemon) pokemonList.getNodeByPosition(currentPosition).element;            
            renderPokemon(currentPokemon);
        } catch (ListaException ex) {
            Logger.getLogger(PrincipalWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void renderPokemon(Pokemon pokemon){
        labelPokemonImage.setIcon(new javax.swing.ImageIcon(getClass().getResource(PREFIX_IMAGE_PATH + pokemon.getName() + SUFIX_IMAGE_PATH)));
        labelPokemonImage.setHorizontalAlignment(SwingConstants.CENTER);
        labelPokemonImage.setVerticalAlignment(SwingConstants.CENTER);
        labelPokemonNumber.setText(pokemon.getNumber() + "");
        labelHeigth.setText(pokemon.getHeight() + " m");
        labelWeigth.setText(pokemon.getWeight() + " kg");
        labelPokemonName.setText(pokemon.getName());
        currentPosition = pokemon.getNumber();
        currentPokemon = pokemon;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        buttonDowload = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        labelPokemonName = new javax.swing.JLabel();
        txtFieldSearchPokemon = new javax.swing.JTextField();
        labelPokemonNumber = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        buttonSortNumberAsc = new javax.swing.JButton();
        buttonSortHeightDesc = new javax.swing.JButton();
        buttonSortHeightAsc = new javax.swing.JButton();
        buttonSortWeightAsc = new javax.swing.JButton();
        buttonSortNameDesc = new javax.swing.JButton();
        buttonSortNameAsc = new javax.swing.JButton();
        buttonSearchPokemon = new javax.swing.JButton();
        labelWeigth = new javax.swing.JLabel();
        labelHeigth = new javax.swing.JLabel();
        labelPokemonImage = new javax.swing.JLabel();
        buttonNextPokemon = new javax.swing.JButton();
        buttonPreviousPokemon = new javax.swing.JButton();
        labelBackground = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1152, 864));

        jDesktopPane1.setBackground(new java.awt.Color(255, 255, 255));
        jDesktopPane1.setPreferredSize(new java.awt.Dimension(1152, 864));
        jDesktopPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonDowload.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        buttonDowload.setForeground(new java.awt.Color(255, 255, 255));
        buttonDowload.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/download.png"))); // NOI18N
        buttonDowload.setOpaque(false);
        buttonDowload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDowloadActionPerformed(evt);
            }
        });
        jDesktopPane1.add(buttonDowload, new org.netbeans.lib.awtextra.AbsoluteConstraints(108, 608, 30, 30));

        buttonDelete.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        buttonDelete.setForeground(new java.awt.Color(255, 255, 255));
        buttonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/delete.png"))); // NOI18N
        buttonDelete.setOpaque(false);
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });
        jDesktopPane1.add(buttonDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(918, 674, 30, 30));

        labelPokemonName.setText("Nombre:");
        jDesktopPane1.add(labelPokemonName, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, -1, -1));

        txtFieldSearchPokemon.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtFieldSearchPokemon.setForeground(new java.awt.Color(102, 0, 204));
        txtFieldSearchPokemon.setBorder(null);
        txtFieldSearchPokemon.setOpaque(false);
        txtFieldSearchPokemon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFieldSearchPokemonKeyPressed(evt);
            }
        });
        jDesktopPane1.add(txtFieldSearchPokemon, new org.netbeans.lib.awtextra.AbsoluteConstraints(793, 670, 110, 50));

        labelPokemonNumber.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelPokemonNumber.setForeground(new java.awt.Color(102, 0, 204));
        labelPokemonNumber.setText("1");
        jDesktopPane1.add(labelPokemonNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 690, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 204));
        jLabel1.setText("Número nacional");
        jDesktopPane1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 670, -1, -1));

        buttonSortNumberAsc.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        buttonSortNumberAsc.setForeground(new java.awt.Color(255, 255, 255));
        buttonSortNumberAsc.setText("N°");
        buttonSortNumberAsc.setOpaque(false);
        buttonSortNumberAsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSortNumberAscActionPerformed(evt);
            }
        });
        jDesktopPane1.add(buttonSortNumberAsc, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 540, 80, 30));

        buttonSortHeightDesc.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        buttonSortHeightDesc.setForeground(new java.awt.Color(255, 255, 255));
        buttonSortHeightDesc.setText("Tamaño");
        buttonSortHeightDesc.setOpaque(false);
        buttonSortHeightDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSortHeightDescActionPerformed(evt);
            }
        });
        jDesktopPane1.add(buttonSortHeightDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 540, 80, 30));

        buttonSortHeightAsc.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        buttonSortHeightAsc.setForeground(new java.awt.Color(255, 255, 255));
        buttonSortHeightAsc.setText("Tamaño");
        buttonSortHeightAsc.setOpaque(false);
        buttonSortHeightAsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSortHeightAscActionPerformed(evt);
            }
        });
        jDesktopPane1.add(buttonSortHeightAsc, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 510, 80, 30));

        buttonSortWeightAsc.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        buttonSortWeightAsc.setForeground(new java.awt.Color(255, 255, 255));
        buttonSortWeightAsc.setText("Peso");
        buttonSortWeightAsc.setOpaque(false);
        buttonSortWeightAsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSortWeightAscActionPerformed(evt);
            }
        });
        jDesktopPane1.add(buttonSortWeightAsc, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 510, 80, 30));

        buttonSortNameDesc.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        buttonSortNameDesc.setForeground(new java.awt.Color(255, 255, 255));
        buttonSortNameDesc.setText("Nombre");
        buttonSortNameDesc.setOpaque(false);
        buttonSortNameDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSortNameDescActionPerformed(evt);
            }
        });
        jDesktopPane1.add(buttonSortNameDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 540, 80, 30));

        buttonSortNameAsc.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        buttonSortNameAsc.setForeground(new java.awt.Color(255, 255, 255));
        buttonSortNameAsc.setText("Nombre");
        buttonSortNameAsc.setOpaque(false);
        buttonSortNameAsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSortNameAscActionPerformed(evt);
            }
        });
        jDesktopPane1.add(buttonSortNameAsc, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 510, 80, 30));

        buttonSearchPokemon.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        buttonSearchPokemon.setForeground(new java.awt.Color(102, 0, 204));
        buttonSearchPokemon.setText("Buscar");
        buttonSearchPokemon.setOpaque(false);
        buttonSearchPokemon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchPokemonActionPerformed(evt);
            }
        });
        jDesktopPane1.add(buttonSearchPokemon, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 670, 110, 50));

        labelWeigth.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelWeigth.setForeground(new java.awt.Color(255, 255, 255));
        labelWeigth.setText("0");
        jDesktopPane1.add(labelWeigth, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 270, 100, 40));

        labelHeigth.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelHeigth.setForeground(new java.awt.Color(255, 255, 255));
        labelHeigth.setText("0");
        jDesktopPane1.add(labelHeigth, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 270, 100, 40));
        jDesktopPane1.add(labelPokemonImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 230, 390, 310));

        buttonNextPokemon.setOpaque(false);
        buttonNextPokemon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNextPokemonActionPerformed(evt);
            }
        });
        jDesktopPane1.add(buttonNextPokemon, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 610, 30, 30));

        buttonPreviousPokemon.setOpaque(false);
        buttonPreviousPokemon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPreviousPokemonActionPerformed(evt);
            }
        });
        jDesktopPane1.add(buttonPreviousPokemon, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 610, 30, 30));

        labelBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/pokedex1.png"))); // NOI18N
        labelBackground.setMaximumSize(new java.awt.Dimension(1152, 864));
        labelBackground.setMinimumSize(new java.awt.Dimension(1152, 864));
        jDesktopPane1.add(labelBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonSearchPokemonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearchPokemonActionPerformed
        searchPokemonAction();
    }//GEN-LAST:event_buttonSearchPokemonActionPerformed

    private void txtFieldSearchPokemonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFieldSearchPokemonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            searchPokemonAction();
        }
    }//GEN-LAST:event_txtFieldSearchPokemonKeyPressed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        int confirmation = JOptionPane.showConfirmDialog(null, "Está seguro de eliminar el pokemon seleccionado");
        if (confirmation == 0){
            try {
                Pokemon nextPokemon = (Pokemon) pokemonList.next(currentPokemon);
                pokemonList.suppress(currentPokemon);
                renderPokemon(nextPokemon);
            } catch (ListaException ex) {
                Logger.getLogger(PrincipalWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void loadPokemonFromFile() {
        PokemonBusiness pokemonBusiness = new PokemonBusiness();
        pokemonList = pokemonBusiness.read();
    }
    
    private void buttonDowloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDowloadActionPerformed
        loadPokemonFromFile();
        JOptionPane.showMessageDialog(null, "Archivo cargado");
    }//GEN-LAST:event_buttonDowloadActionPerformed

    private void buttonNextPokemonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNextPokemonActionPerformed
        try {
            Pokemon nextPokemon = (Pokemon) pokemonList.next(currentPokemon);
            renderPokemon(nextPokemon);
        } catch (ListaException ex) {
            Logger.getLogger(PrincipalWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonNextPokemonActionPerformed

    private void buttonPreviousPokemonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPreviousPokemonActionPerformed
        try {
            Pokemon nextPokemon = (Pokemon) pokemonList.previous(currentPokemon);
            renderPokemon(nextPokemon);
        } catch (ListaException ex) {
            Logger.getLogger(PrincipalWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonPreviousPokemonActionPerformed

    private void buttonSortNameAscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSortNameAscActionPerformed
        try {
            pokemonList.radixSortAsc();
            currentPokemon = (Pokemon) pokemonList.getNodeByPosition(1).element;
            renderPokemon(currentPokemon);
        } catch (ListaException ex) {
            Logger.getLogger(PrincipalWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonSortNameAscActionPerformed

    private void buttonSortNameDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSortNameDescActionPerformed
        try {
            pokemonList.radixSortDesc();
            currentPokemon = (Pokemon) pokemonList.getNodeByPosition(1).element;
            renderPokemon(currentPokemon);
        } catch (ListaException ex) {
            Logger.getLogger(PrincipalWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonSortNameDescActionPerformed

    private void buttonSortWeightAscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSortWeightAscActionPerformed
        try {
            pokemonList.quickSort();
            currentPokemon = (Pokemon) pokemonList.getNodeByPosition(1).element;
            renderPokemon(currentPokemon);
        } catch (ListaException ex) {
            Logger.getLogger(PrincipalWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonSortWeightAscActionPerformed

    private void buttonSortHeightAscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSortHeightAscActionPerformed
        try {
            pokemonList.mergeSortAsc();
            currentPokemon = (Pokemon) pokemonList.getNodeByPosition(1).element;
            renderPokemon(currentPokemon);
        } catch (ListaException ex) {
            Logger.getLogger(PrincipalWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonSortHeightAscActionPerformed

    private void buttonSortHeightDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSortHeightDescActionPerformed
        try {
            pokemonList.mergeSortDesc();
            currentPokemon = (Pokemon) pokemonList.getNodeByPosition(1).element;
            renderPokemon(currentPokemon);
        } catch (ListaException ex) {
            Logger.getLogger(PrincipalWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonSortHeightDescActionPerformed

    private void buttonSortNumberAscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSortNumberAscActionPerformed
        try {
            pokemonList.bubbleSort();
            currentPokemon = (Pokemon) pokemonList.getNodeByPosition(1).element;
            renderPokemon(currentPokemon);
        } catch (ListaException ex) {
            Logger.getLogger(PrincipalWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonSortNumberAscActionPerformed
       
    private void searchPokemonAction(){
        if (txtFieldSearchPokemon.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Ingrese el nombre del pokemon");
            return;
        }
        try {
            Object searchingResult = pokemonList.getNodeByName(txtFieldSearchPokemon.getText());            
            if (searchingResult == null){
                JOptionPane.showMessageDialog(null, "El nombre del pokemon ingresado no coincide con ningún pokemon guardado");
                return;
            }             
            Nodo temporal = (Nodo) searchingResult;
            currentPokemon = (Pokemon) temporal.element;
            renderPokemon(currentPokemon);
        } catch (ListaException ex) {
            Logger.getLogger(PrincipalWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonDowload;
    private javax.swing.JButton buttonNextPokemon;
    private javax.swing.JButton buttonPreviousPokemon;
    private javax.swing.JButton buttonSearchPokemon;
    private javax.swing.JButton buttonSortHeightAsc;
    private javax.swing.JButton buttonSortHeightDesc;
    private javax.swing.JButton buttonSortNameAsc;
    private javax.swing.JButton buttonSortNameDesc;
    private javax.swing.JButton buttonSortNumberAsc;
    private javax.swing.JButton buttonSortWeightAsc;
    private javax.swing.JButton jButton1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel labelBackground;
    private javax.swing.JLabel labelHeigth;
    private javax.swing.JLabel labelPokemonImage;
    private javax.swing.JLabel labelPokemonName;
    private javax.swing.JLabel labelPokemonNumber;
    private javax.swing.JLabel labelWeigth;
    private javax.swing.JTextField txtFieldSearchPokemon;
    // End of variables declaration//GEN-END:variables
}
